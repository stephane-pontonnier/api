# nom de l'application
spring.application.name=api

# change le port par defaut (8080) de tomcat
# Cela signifie que l'appli sera accessible sur http://localhost:9000
server.port=9000

# Définit le niveau de log par défaut pour tout le projet
# error = seuls les messages d'erreur sont affichés
logging.level.root=error
# Définit le niveau de log pour ton propre package Java (où est ton code).
# info affiche les logs INFO, WARN, et ERROR — utile pour suivre l'exécution normale de l'app.
logging.level.fr.afpa.brive.cda=info
# Active les logs pour tout ce qui concerne Spring Data (repositories, entités, etc.).
# Utile pour voir les requêtes JPA et opérations sur la BDD.
logging.level.org.springframework.data=INFO
# Affiche en détail les requêtes exécutées via JdbcTemplate.
# DEBUG = très bavard, utile pour le débogage précis.
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG 
# Active les logs pour le serveur Tomcat intégré (par ex. démarrage, ports, erreurs réseau).
# INFO montre les événements importants sans trop de détails.
logging.level.org.springframework.boot.web.embedded.tomcat=INFO 

# L’URL JDBC pour se connecter à ta base MySQL nommée sparadrap.
spring.datasource.url=jdbc:mysql://localhost:3306/sparadrap
# Identifiants pour se connecter à la base MySQL.
spring.datasource.username=dev
spring.datasource.password=dev123
# Le driver JDBC à utiliser.
# Pas obligatoire si Spring Boot le détecte automatiquement (mais le mettre pour plus de clarté).
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Contrôle la façon dont Hibernate gère le schéma de la base de données (tables, colonnes…).
# update : met à jour les tables en fonction de tes entités sans supprimer les données existantes.
# en production remettre à none
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# hibernate
# Permet de spécifier le dialecte SQL utilisé par Hibernate (ex : MySQL 5 avec InnoDB).
# Si tu la décommentes, Hibernate générera un SQL mieux adapté à MySQL 5.
# Automatiquement détecté dans la plupart des cas, mais tu peux le préciser manuellement pour être sûr.
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8InnoDBDialect